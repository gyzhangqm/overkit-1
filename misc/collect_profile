#! /bin/bash

set -e

if [ $# -eq 0 ]; then
  echo "ERROR: Missing argument."
  exit 1
fi

CollectData() {
  grep "$2: " $1 | cut -d' ' -f3 | tr '\n' ' '
}

PrintData() {
  data_array=($2)
  printf "$1"
  for ((i=0; i<${#data_array[@]}; i++)); do
    printf ",%s" ${data_array[$i]}
  done
  printf "\n"
}

file=$1

PrintData "" "1 2 4 8 16 32 64 128 256 512"
PrintData "Overlap" "$(CollectData $file "Assembler::Overlap")"
PrintData "Overlap::Subdivide" "$(CollectData $file "Assembler::Overlap::Subdivide")"
PrintData "Overlap::BoundingBox" "$(CollectData $file "Assembler::Overlap::BoundingBox")"
PrintData "Overlap::BoundingBox::CreateHash" "$(CollectData $file "Assembler::Overlap::BoundingBox::CreateHash")"
PrintData "Overlap::BoundingBox::MapToBins" "$(CollectData $file "Assembler::Overlap::BoundingBox::MapToBins")"
PrintData "Overlap::BoundingBox::RetrieveBins" "$(CollectData $file "Assembler::Overlap::BoundingBox::RetrieveBins")"
PrintData "Overlap::Connect" "$(CollectData $file "Assembler::Overlap::Connect")"
PrintData "Overlap::Search" "$(CollectData $file "Assembler::Overlap::Search")"
PrintData "Overlap::Search::BuildAccel" "$(CollectData $file "Assembler::Overlap::Search::BuildAccel")"
PrintData "Overlap::Search::QueryAccel" "$(CollectData $file "Assembler::Overlap::Search::QueryAccel")"
PrintData "Overlap::Sync" "$(CollectData $file "Assembler::Overlap::Sync")"
PrintData "Overlap::Create" "$(CollectData $file "Assembler::Overlap::Create")"
PrintData "Overlap::Fill" "$(CollectData $file "Assembler::Overlap::Fill")"
PrintData "Overlap::CreateExchange" "$(CollectData $file "Assembler::Overlap::CreateExchange")"
PrintData "Overlap::CreateAux" "$(CollectData $file "Assembler::Overlap::CreateAux")"
PrintData "InferBoundaries" "$(CollectData $file "Assembler::InferBoundaries")"
PrintData "CutBoundaryHoles" "$(CollectData $file "Assembler::CutBoundaryHoles")"
PrintData "CutBoundaryHoles::Project" "$(CollectData $file "Assembler::CutBoundaryHoles::Project")"
PrintData "CutBoundaryHoles::Project::CreateExchange" "$(CollectData $file "Assembler::CutBoundaryHoles::Project::CreateExchange")"
PrintData "CutBoundaryHoles::Project::Exchange" "$(CollectData $file "Assembler::CutBoundaryHoles::Project::Exchange")"
PrintData "CutBoundaryHoles::Project::GenCover" "$(CollectData $file "Assembler::CutBoundaryHoles::Project::GenCover")"
PrintData "CutBoundaryHoles::Project::GenBoundary" "$(CollectData $file "Assembler::CutBoundaryHoles::Project::GenBoundary")"
PrintData "CutBoundaryHoles::DetectExterior" "$(CollectData $file "Assembler::CutBoundaryHoles::DetectExterior")"
PrintData "CutBoundaryHoles::DetectExterior::Seed" "$(CollectData $file "Assembler::CutBoundaryHoles::DetectExterior::Seed")"
PrintData "CutBoundaryHoles::DetectExterior::Flood" "$(CollectData $file "Assembler::CutBoundaryHoles::DetectExterior::Flood")"
PrintData "CutBoundaryHoles::UpdateAux" "$(CollectData $file "Assembler::CutBoundaryHoles::UpdateAux")"
PrintData "CutBoundaryHoles::UpdateAux::Grid" "$(CollectData $file "Assembler::CutBoundaryHoles::UpdateAux::Grid")"
PrintData "CutBoundaryHoles::UpdateAux::Overlap" "$(CollectData $file "Assembler::CutBoundaryHoles::UpdateAux::Overlap")"
PrintData "LocateOuterFringe" "$(CollectData $file "Assembler::LocateOuterFringe")"
PrintData "Occlusion" "$(CollectData $file "Assembler::Occlusion")"
PrintData "Occlusion::Pairwise" "$(CollectData $file "Assembler::Occlusion::Pairwise")"
PrintData "Occlusion::PadSmooth" "$(CollectData $file "Assembler::Occlusion::PadSmooth")"
PrintData "Occlusion::Accumulate" "$(CollectData $file "Assembler::Occlusion::Accumulate")"
PrintData "MinimizeOverlap" "$(CollectData $file "Assembler::MinimizeOverlap")"
PrintData "Connectivity" "$(CollectData $file "Assembler::Connectivity")"
PrintData "Connectivity::LocateReceivers" "$(CollectData $file "Assembler::Connectivity::LocateReceivers")"
PrintData "Connectivity::DonorEdgeDistance" "$(CollectData $file "Assembler::Connectivity::DonorEdgeDistance")"
PrintData "Connectivity::DonorEdgeDistance::ComputeDistances" "$(CollectData $file "Assembler::Connectivity::DonorEdgeDistance::ComputeDistances")"
PrintData "Connectivity::DonorEdgeDistance::CreateExchange" "$(CollectData $file "Assembler::Connectivity::DonorEdgeDistance::CreateExchange")"
PrintData "Connectivity::DonorEdgeDistance::Exchange" "$(CollectData $file "Assembler::Connectivity::DonorEdgeDistance::Exchange")"
PrintData "Connectivity::ChooseDonors" "$(CollectData $file "Assembler::Connectivity::ChooseDonors")"
PrintData "Connectivity::Sync" "$(CollectData $file "Assembler::Connectivity::Sync")"
PrintData "Connectivity::Sync::CreateExchange" "$(CollectData $file "Assembler::Connectivity::Sync::CreateExchange")"
PrintData "Connectivity::Sync::Exchange" "$(CollectData $file "Assembler::Connectivity::Sync::Exchange")"
PrintData "Connectivity::Sync::Finalize" "$(CollectData $file "Assembler::Connectivity::Sync::Finalize")"
PrintData "Connectivity::Create" "$(CollectData $file "Assembler::Connectivity::Create")"
PrintData "Connectivity::Fill" "$(CollectData $file "Assembler::Connectivity::Fill")"
